# Generated by Django 5.1 on 2025-01-13 18:31

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('setting', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EstExecuteeAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_RPHY_cp', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ressource_mobilise', models.CharField(max_length=300)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.action')),
                ('etape_execution_glob', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeFCPDR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('etape_execution_glob', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeFCPTDD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('observations', models.TextField()),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeGCAUTRES',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeGCSUB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeModeGestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_RPHY_cp', models.DecimalField(decimal_places=2, max_digits=4)),
                ('etape_execution_glob', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('nature_depense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.naturedepense')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeOperationFDCDR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae', models.FloatField()),
                ('montant_cp', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('observation', models.TextField()),
                ('difficultes', models.TextField()),
                ('montant_engage', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.DecimalField(decimal_places=2, max_digits=4)),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.subgroupe')),
            ],
        ),
        migrations.CreateModel(
            name='EstExecuteeSur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('chemin_extrant', models.CharField(max_length=300)),
                ('ecart', models.IntegerField()),
                ('difficultes_rencontrees', models.TextField()),
                ('etape_execution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='setting.etapeexecution')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='EstProgramme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('exercice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.exercice')),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeAction',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_RPHY_cp', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ressource_mobilise', models.CharField(max_length=300)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.action')),
                ('etape_execution_glob', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical est executee action',
                'verbose_name_plural': 'historical est executee actions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeFCPDR',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('etape_execution_glob', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est executee fcpdr',
                'verbose_name_plural': 'historical est executee fcpdrs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeFCPTDD',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('observations', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est executee fcptdd',
                'verbose_name_plural': 'historical est executee fcptdds',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeGCAUTRES',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est executee gcautres',
                'verbose_name_plural': 'historical est executee gcautress',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeGCSUB',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('prise_en_charge_TTC', models.FloatField()),
                ('paiement_net_HT', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.FloatField()),
                ('observations', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est executee gcsub',
                'verbose_name_plural': 'historical est executee gcsubs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeModeGestion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('montant_ae_eng', models.FloatField()),
                ('montant_cp_eng', models.FloatField()),
                ('montant_liq', models.FloatField()),
                ('pourcentage_ae_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_cp_eng', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ordonancement', models.FloatField()),
                ('pourcentage_liq', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_ord', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pourcentage_RPHY_cp', models.DecimalField(decimal_places=2, max_digits=4)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('etape_execution_glob', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.etapeexecutionglob')),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('nature_depense', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.naturedepense')),
            ],
            options={
                'verbose_name': 'historical est executee mode gestion',
                'verbose_name_plural': 'historical est executee mode gestions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeOperationFDCDR',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae', models.FloatField()),
                ('montant_cp', models.FloatField()),
                ('dateimport', models.DateField(default=django.utils.timezone.now)),
                ('contrat_situation_actuelle', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant_contrat', models.FloatField()),
                ('date_demarrage_travaux', models.DateField()),
                ('delai_execution_contrat', models.IntegerField()),
                ('observation', models.TextField()),
                ('difficultes', models.TextField()),
                ('montant_engage', models.FloatField()),
                ('pourcentage_execution_physique_au_demarrage', models.FloatField()),
                ('pourcentage_execution_physique_a_date', models.DecimalField(decimal_places=2, max_digits=4)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('groupe', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.subgroupe')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical est executee operation fdcdr',
                'verbose_name_plural': 'historical est executee operation fdcdrs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstExecuteeSur',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('chemin_extrant', models.CharField(max_length=300)),
                ('ecart', models.IntegerField()),
                ('difficultes_rencontrees', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('etape_execution', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.etapeexecution')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est executee sur',
                'verbose_name_plural': 'historical est executee surs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEstProgramme',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('montant_ae_init', models.FloatField()),
                ('montant_cp_init', models.FloatField()),
                ('montant_ae_rev', models.FloatField()),
                ('montant_cp_rev', models.FloatField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.exercice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical est programme',
                'verbose_name_plural': 'historical est programmes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOperation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('situation_contract', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('delai_exec', models.IntegerField(blank=True, null=True)),
                ('date_situation', models.DateField()),
                ('montant_engage', models.FloatField(blank=True, null=True)),
                ('pourcentage_exec_physique', models.FloatField(blank=True, null=True)),
                ('numero_marche', models.CharField(blank=True, max_length=255, null=True)),
                ('prestataire', models.CharField(blank=True, max_length=255, null=True)),
                ('ingenieur_marche', models.CharField(blank=True, max_length=255, null=True)),
                ('chef_service', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tache', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='setting.tache')),
            ],
            options={
                'verbose_name': 'historical operation',
                'verbose_name_plural': 'historical operations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation_contract', models.CharField(choices=[('BC:Non executé', 'BC:Non executé'), ('BC:Exec. en cours', 'BC:Exec. en cours'), ('BC:Executé', 'BC:Executé'), ('Marché:Gré-a-Gré,Accord MINMAP attendu', 'Marché:Gré-a-Gré,Accord MINMAP attendu'), ('Marché:ASMI/AMI en cours', 'Marché:ASMI/AMI en cours'), ('Marché:DAO non transmis', 'Marché:DAO non transmis'), ('Marché:DAO en CCC', 'Marché:DAO en CCC'), ('Marché:DAO transmis en CIPM', 'Marché:DAO transmis en CIPM'), ('Marché:AO lancé', 'Marché:AO lancé'), ('Marché:AO infructueux', 'Marché:AO infructueux'), ('Marché:Gré-a-Gré,proc. en cours', 'Marché:Gré-a-Gré,proc. en cours'), ('Marché:Analyse offres en cours', 'Marché:Analyse offres en cours'), ('Marché:Prop. attrib. en CCC', 'Marché:Prop. attrib. en CCC'), ('Marché:Attribué', 'Marché:Attribué'), ('Marché:Gré-a-Gré,proj. Marché en CCC', 'Marché:Gré-a-Gré,proj. Marché en CCC'), ('Marché:Signé', 'Marché:Signé'), ('Marché:OS Dem. trav. notifié', 'Marché:OS Dem. trav. notifié'), ('Marché:OS Susp. trav. notifié', 'Marché:OS Susp. trav. notifié'), ('Marché:Avenant en cours', 'Marché:Avenant en cours'), ('Marché:receptionné', 'Marché:receptionné'), ('Marché pluriannuel signé avant 2024', 'Marché pluriannuel signé avant 2024'), ('Marché:chantier abandonné', 'Marché:chantier abandonné'), ('Marché:resilié', 'Marché:resilié'), ('Marché spécial:non signé', 'Marché spécial:non signé'), ('Marché spécial:signé', 'Marché spécial:signé'), ('Marché spécial:receptionné', 'Marché spécial:receptionné'), ('Régie:Accord MINMAP attendu', 'Régie:Accord MINMAP attendu'), ('Régie:Exec. en cours', 'Régie:Exec. en cours'), ('Régie:Exec. complete', 'Régie:Exec. complete'), ('Convention:signature en cours', 'Convention:signature en cours'), ('Convention:signée', 'Convention:signée'), ('Convention:Commande receptionnée', 'Convention:Commande receptionnée'), ('Arriérée:liasse incomplete', 'Arriérée:liasse incomplete'), ('Arriérée:liasse complete', 'Arriérée:liasse complete'), ('Autre Opération Fonct.:Non executé', 'Autre Opération Fonct.:Non executé'), ('Autre Opération Fonct.:Executé', 'Autre Opération Fonct.:Executé'), ('Dotation non repartie', 'Dotation non repartie')], default='BC:Non executé', max_length=300)),
                ('montant', models.FloatField(blank=True, null=True)),
                ('delai_exec', models.IntegerField(blank=True, null=True)),
                ('date_situation', models.DateField()),
                ('montant_engage', models.FloatField(blank=True, null=True)),
                ('pourcentage_exec_physique', models.FloatField(blank=True, null=True)),
                ('numero_marche', models.CharField(blank=True, max_length=255, null=True)),
                ('prestataire', models.CharField(blank=True, max_length=255, null=True)),
                ('ingenieur_marche', models.CharField(blank=True, max_length=255, null=True)),
                ('chef_service', models.CharField(blank=True, max_length=255, null=True)),
                ('tache', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setting.tache')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalConsommation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document', models.TextField(blank=True, max_length=100, null=True, verbose_name='Fichier')),
                ('montant', models.FloatField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='execution.operation')),
            ],
            options={
                'verbose_name': 'historical consommation',
                'verbose_name_plural': 'historical consommations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Consommation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(blank=True, null=True, upload_to='documents/consommations/', verbose_name='Fichier')),
                ('montant', models.FloatField(blank=True, null=True)),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='execution.operation')),
            ],
        ),
    ]
